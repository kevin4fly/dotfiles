" Note: Skip initialization for vim-tiny or vim-small.
if 0 | endif

function! s:source_rc(path)
  execute 'source' fnameescape(expand('~/.vim/rc/' . a:path))
endfunction

if has('vim_starting')
  " recommanded
  if &compatible
    set nocompatible
  endif
  " required
  set runtimepath+=~/.vim/bundle/neobundle/
endif

" Use git protocol.
let g:neobundle#types#git#default_protocol = 'git'

" initialization
call s:source_rc('init.rc.vim')

let s:bundles_path = expand('~/.vim/bundle')
call neobundle#begin(s:bundles_path)

if neobundle#load_cache()
  call s:source_rc('neobundle.rc.vim')
  NeoBundleSaveCache
endif

NeoBundleLocal ~/.vim/local_bundle

call neobundle#end()

" required!
filetype plugin indent on

" installation check.
if !has('vim_starting')
  " Installation check.
  NeoBundleCheck
endif

" helper functions
call s:source_rc('helper.rc.vim')

" mappings
call s:source_rc('mappings.rc.vim')

" options
call s:source_rc('options.rc.vim')

" view (buffer, windown and tab)
call s:source_rc('view.rc.vim')

" tags and cscope
call s:source_rc('tags.rc.vim')

" plugins' settings
call s:source_rc('plugins.rc.vim')

" gui settings
if has('gui_running')
  call s:source_rc('gui.rc.vim')
endif

" vim:tw=78:ts=2:sw=2:sts=2:et:fdm=marker
